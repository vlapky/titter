{"version":3,"sources":["redux/initialState.ts","redux/rootReducer.ts","containters/SignIn.tsx","icons/close.svg","icons/heart.svg","components/Posts.tsx","functions/ExtractName.ts","functions/GeneratePosts.ts","functions/ExtractPost.ts","functions/FilterUsersPosts.ts","components/FeedButtons.tsx","containters/Feed.tsx","components/Input.tsx","components/ProfileName.tsx","components/ProfileButtons.tsx","components/ProfileLinks.tsx","components/ProfileSubs.tsx","containters/Profile.tsx","functions/GetProfileState.ts","containters/Subs.tsx","functions/GetSubsList.ts","App.tsx","redux/index.ts","localStorage/Load.ts","localStorage/Save.ts","index.tsx"],"names":["initialState","login","users","currentUser","byId","user1","name","subsYou","subsMe","user2","allIds","posts","post1","id","author","text","liked","post2","signIn","createAction","signOut","subscribe","unsubscribe","addPost","delPost","likePost","changeName","createReducer","type","state","action","forEach","payload","newUserId","length","push","subUser","indexSubUser","indexOf","splice","indexCurUser","postId","Date","getUTCMilliseconds","delPostId","indexDelPost","likePostId","indexLike","newName","acceptName","userId","SignIn","dispatch","useDispatch","React","useState","signInValue","changeSignIn","className","htmlFor","maxLength","value","onChange","e","target","placeholder","disabled","onClick","Posts","acceptDel","slice","reverse","map","authorId","to","src","del","alt","like","join","ExtractName","GeneratePosts","postsIds","postData","ExtractPost","FilterUsersPosts","usersIds","filter","includes","FeedButtons","postsType","changeType","Feed","changePostsType","useSelector","allPosts","subsPosts","Input","send","cancel","changeText","acceptSend","autoFocus","ProfileName","userName","profileState","inputVisible","changeVisible","handleCancel","ProfileButtons","handleSignOut","handleAddPost","handleSub","handleUnsub","console","log","ProfileLinks","subs","curId","ProfileSubs","subsYouLen","subsMeLen","Profile","useParams","GetProfileState","userPosts","Subs","subsList","subsType","GetSubsList","sub","App","loginUser","exact","path","component","loadState","serializedState","localStorage","getItem","JSON","parse","Error","loadFromLocalStorage","store","configureStore","reducer","rootReducer","preloadedState","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fd635cf.chunk.js","sourcesContent":["import { IState } from '../interfaces/IState'\r\n\r\nexport const initialState: IState = {\r\n  login: false,\r\n  users: {\r\n    currentUser: '',\r\n    byId: {\r\n      user1: { name: 'vlapky', subsYou: [], subsMe: ['user2'] },\r\n      user2: { name: 'Kiva', subsYou: ['user1'], subsMe: [] },\r\n    },\r\n    allIds: ['user1', 'user2'],\r\n  },\r\n  posts: {\r\n    byId: {\r\n      post1: {\r\n        id: 'post1',\r\n        author: 'user1',\r\n        text: 'Welcome to Titter by vlapky',\r\n        liked: ['user1', 'user2'],\r\n      },\r\n      post2: {\r\n        id: 'post2',\r\n        author: 'user2',\r\n        text: 'Welcome to Titter by vlapky by Kiva',\r\n        liked: ['user2', 'user1'],\r\n      },\r\n    },\r\n    allIds: ['post1', 'post2'],\r\n  },\r\n}\r\n","import { createAction, createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from './initialState'\r\n\r\nexport const signIn = createAction<string>('SIGN_IN')\r\nexport const signOut = createAction<void>('SIGN_OUT')\r\n\r\nexport const subscribe = createAction<string>('SUB')\r\nexport const unsubscribe = createAction<string>('UNSUB')\r\n\r\nexport const addPost = createAction<Object>('ADD_POST')\r\nexport const delPost = createAction<string>('DEL_POST')\r\nexport const likePost = createAction<string>('LIKE_POST')\r\n\r\nexport const changeName = createAction<string>('CHANGE_NAME')\r\n\r\nexport default createReducer(initialState, {\r\n  [signIn.type]: (state, action) => {\r\n    //Вход старого пользователя\r\n    state.users.allIds.forEach((id: string) => {\r\n      let user = state.users.byId[id]\r\n      if (user.name === action.payload) {\r\n        state.users.currentUser = id\r\n        state.login = true\r\n      }\r\n    })\r\n    //Регистрация нового пользователя\r\n    if (!state.login) {\r\n      const newUserId: string = `user${state.users.allIds.length + 1}`\r\n\r\n      state.users.allIds.push(newUserId)\r\n      state.users.byId[newUserId] = {\r\n        name: action.payload,\r\n        subsYou: [],\r\n        subsMe: [],\r\n      }\r\n\r\n      state.users.currentUser = newUserId\r\n      state.login = true\r\n    }\r\n  },\r\n\r\n  [signOut.type]: (state) => {\r\n    state.users.currentUser = ''\r\n    state.login = false\r\n  },\r\n\r\n  [subscribe.type]: (state, action) => {\r\n    const currentUser = state.users.currentUser\r\n    const subUser = action.payload\r\n\r\n    state.users.byId[currentUser].subsYou.push(subUser)\r\n    state.users.byId[subUser].subsMe.push(currentUser)\r\n  },\r\n\r\n  [unsubscribe.type]: (state, action) => {\r\n    const currentUser = state.users.currentUser\r\n    const subUser = action.payload\r\n\r\n    const indexSubUser = state.users.byId[currentUser].subsYou.indexOf(subUser)\r\n    state.users.byId[currentUser].subsYou.splice(indexSubUser, 1)\r\n\r\n    const indexCurUser = state.users.byId[subUser].subsMe.indexOf(currentUser)\r\n    state.users.byId[subUser].subsMe.splice(indexCurUser, 1)\r\n  },\r\n\r\n  [addPost.type]: (state, action) => {\r\n    const postId = `${new Date().getUTCMilliseconds()}`\r\n\r\n    state.posts.allIds.push(postId)\r\n    state.posts.byId[postId] = {\r\n      id: postId,\r\n      author: state.users.currentUser,\r\n      text: action.payload,\r\n      liked: [],\r\n    }\r\n  },\r\n\r\n  [delPost.type]: (state, action) => {\r\n    const delPostId = action.payload\r\n\r\n    const indexDelPost = state.posts.allIds.indexOf(delPostId)\r\n    state.posts.allIds.splice(indexDelPost, 1)\r\n\r\n    delete state.posts.byId[delPostId]\r\n  },\r\n\r\n  [likePost.type]: (state, action) => {\r\n    const likePostId = action.payload\r\n    const currentUser = state.users.currentUser\r\n    const indexLike = state.posts.byId[likePostId].liked.indexOf(currentUser)\r\n\r\n    if (indexLike === -1) {\r\n      //если лайк не стоит, поставить\r\n      state.posts.byId[likePostId].liked.push(currentUser)\r\n    } else {\r\n      //если лайк стоит, убрать\r\n      state.posts.byId[likePostId].liked.splice(indexLike, 1)\r\n    }\r\n  },\r\n\r\n  [changeName.type]: (state, action) => {\r\n    const newName = action.payload\r\n    const currentUser = state.users.currentUser\r\n    let acceptName = true\r\n    //проверка доступности имени\r\n    state.users.allIds.forEach((userId) => {\r\n      if (state.users.byId[userId].name === newName) acceptName = false\r\n    })\r\n    //замена имени\r\n    if (acceptName) state.users.byId[currentUser].name = newName\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { signIn } from '../redux/rootReducer'\r\nimport '../styles/SignIn.scss'\r\n\r\nexport const SignIn: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [signInValue, changeSignIn] = React.useState('')\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeSignIn(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"SignIn\">\r\n      <label htmlFor=\"sign-in\" className=\"SignIn__title\">\r\n        Введите имя\r\n      </label>\r\n      <input\r\n        maxLength={12}\r\n        value={signInValue}\r\n        onChange={handleChange}\r\n        className=\"SignIn__input\"\r\n        id=\"sign-in\"\r\n        type=\"text\"\r\n        placeholder=\"vlapky\"\r\n      />\r\n      <button\r\n        disabled={!(signInValue.length > 3)}\r\n        onClick={() => dispatch(signIn(signInValue))}\r\n        className=\"button\"\r\n      >\r\n        Продолжить\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.1d546531.svg\";","export default __webpack_public_path__ + \"static/media/heart.fb824694.svg\";","import React from 'react'\r\nimport { IPostsProps } from '../interfaces/IPostProps'\r\nimport del from '../icons/close.svg'\r\nimport like from '../icons/heart.svg'\r\nimport '../styles/Post.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Posts: React.FC<IPostsProps> = ({\r\n  posts,\r\n  acceptDel,\r\n  likePost,\r\n  delPost,\r\n  currentUser,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      {posts\r\n        .slice(0)\r\n        .reverse()\r\n        .map(({ id, authorId, author, text, liked }) => (\r\n          <li key={id} className=\"Post\">\r\n            <article>\r\n              <div className=\"Post__head\">\r\n                <Link className=\"Post__head_user\" to={`/${authorId}`}>\r\n                  {author}\r\n                </Link>\r\n                {currentUser === authorId && (\r\n                  <img\r\n                    onClick={() => delPost(id)}\r\n                    src={del}\r\n                    alt=\"delete\"\r\n                    className=\"Post__head_icon\"\r\n                  />\r\n                )}\r\n                <img\r\n                  onClick={() => likePost(id)}\r\n                  src={like}\r\n                  alt=\"like\"\r\n                  className=\"Post__head_icon\"\r\n                />\r\n              </div>\r\n              <p className=\"Post_text\">{text}</p>\r\n              <p className=\"Post_liked\">\r\n                {`Понравилось: `}\r\n                <span>{liked.join(', ')}</span>\r\n              </p>\r\n            </article>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n","export default function ExtractName(id: string, users: any) {\r\n  let name: string = users.byId[id].name\r\n  return name\r\n}\r\n","import ExtractPost from './ExtractPost'\r\n\r\nexport default function GeneratePosts(\r\n  postsIds: Array<string>,\r\n  posts: any,\r\n  users: any\r\n) {\r\n  let postsArray = postsIds.map((id: string) => {\r\n    return ExtractPost(id, posts, users)\r\n  })\r\n  return postsArray\r\n}\r\n","import ExtractName from './ExtractName'\r\n\r\nexport default function ExtractPost(id: string, posts: any, users: any) {\r\n  let postData = posts.byId[id]\r\n  let post = {\r\n    id: postData.id,\r\n    authorId: postData.author,\r\n    author: ExtractName(postData.author, users),\r\n    text: postData.text,\r\n    liked: postData.liked.map((id: string) => ExtractName(id, users)),\r\n  }\r\n  return post\r\n}\r\n","export default function FilterUsersPosts(usersIds: Array<string>, posts: any) {\r\n  let filterPostsIds: Array<string> = posts.allIds.filter((id: string) =>\r\n    usersIds.includes(posts.byId[id].author)\r\n  )\r\n  return filterPostsIds\r\n}\r\n","import React from 'react'\r\n\r\ninterface FeedButtonsProps {\r\n  postsType: string\r\n  changeType: any\r\n}\r\n\r\nexport const FeedButtons: React.FC<FeedButtonsProps> = ({\r\n  postsType,\r\n  changeType,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => changeType('all')}\r\n        className={`button feedbutton ${postsType === 'all' && 'active'}`}\r\n      >\r\n        Все посты\r\n      </button>\r\n      <button\r\n        onClick={() => changeType('subs')}\r\n        className={`button feedbutton ${postsType === 'subs' && 'active'}`}\r\n      >\r\n        Подписки\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport '../styles/Feed.scss'\r\nimport { Posts } from '../components/Posts'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IState } from '../interfaces/IState'\r\nimport GeneratePosts from '../functions/GeneratePosts'\r\nimport FilterUsersPosts from '../functions/FilterUsersPosts'\r\nimport { delPost, likePost } from '../redux/rootReducer'\r\nimport { FeedButtons } from '../components/FeedButtons'\r\n\r\nexport const Feed: React.FC = () => {\r\n  const [postsType, changePostsType] = React.useState('all')\r\n  const users = useSelector((state: IState) => state.users)\r\n  const posts = useSelector((state: IState) => state.posts)\r\n  const dispatch = useDispatch()\r\n  const currentUser = users.currentUser\r\n  const allPosts: any = GeneratePosts(posts.allIds, posts, users)\r\n  const subsPosts: any = GeneratePosts(\r\n    FilterUsersPosts(\r\n      [...users.byId[users.currentUser].subsYou, users.currentUser],\r\n      posts\r\n    ),\r\n    posts,\r\n    users\r\n  )\r\n\r\n  const handleLikePost = (id: string) => {\r\n    dispatch(likePost(id))\r\n  }\r\n\r\n  const handleDelPost = (id: string) => {\r\n    dispatch(delPost(id))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Feed\">\r\n      <Link className=\"link\" to={`/${currentUser}`}>\r\n        В профиль\r\n      </Link>\r\n      <FeedButtons postsType={postsType} changeType={changePostsType} />\r\n      <Posts\r\n        posts={postsType === 'all' ? allPosts : subsPosts}\r\n        currentUser={currentUser}\r\n        likePost={handleLikePost}\r\n        delPost={handleDelPost}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport IInputProps from '../interfaces/IInputProps'\r\nimport '../styles/Input.scss'\r\n\r\nexport const Input: React.FC<IInputProps> = ({ type, send, cancel }) => {\r\n  const [text, changeText] = React.useState<string>('')\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeText(e.target.value)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    send(text)\r\n    changeText('')\r\n    cancel()\r\n  }\r\n\r\n  let acceptSend = text.length > 3\r\n  let maxLength = type === 'post' ? 80 : type === 'name' ? 12 : 0\r\n\r\n  return (\r\n    <div className=\"Input\">\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        value={text}\r\n        onChange={handleChange}\r\n        maxLength={maxLength}\r\n        placeholder={\r\n          type === 'post' ? 'Новый пост' : type === 'name' ? 'Новое имя' : ''\r\n        }\r\n        className=\"Input__input\"\r\n      />\r\n      <div className=\"Input__buttons\">\r\n        <button\r\n          onClick={handleAdd}\r\n          disabled={!acceptSend}\r\n          className=\"button button_send\"\r\n        >\r\n          {type === 'post' ? 'Добавить пост' : type === 'name' ? 'Сменить' : ''}\r\n        </button>\r\n        <button onClick={cancel} className=\"button button_cancel\">\r\n          Отмена\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { IProfileName } from '../interfaces/IProfileName'\r\nimport { Input } from './Input'\r\n\r\nexport const ProfileName: React.FC<IProfileName> = ({\r\n  userName,\r\n  changeName,\r\n  profileState,\r\n}) => {\r\n  const [inputVisible, changeVisible] = React.useState<Boolean>(false)\r\n\r\n  const handleCancel = () => {\r\n    if (profileState === 'YOUR') changeVisible(!inputVisible)\r\n  }\r\n  return (\r\n    <>\r\n      <p onClick={handleCancel} className=\"Profile__user\">\r\n        {userName}\r\n      </p>\r\n      {inputVisible && (\r\n        <Input type=\"name\" send={changeName} cancel={handleCancel} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { IProfileButtonsProps } from '../interfaces/IProfileButtonsProps'\r\nimport { Input } from './Input'\r\n\r\nexport const ProfileButtons: React.FC<IProfileButtonsProps> = ({\r\n  profileState,\r\n  handleSignOut,\r\n  handleAddPost,\r\n  handleSub,\r\n  handleUnsub,\r\n}) => {\r\n  const [inputVisible, changeVisible] = React.useState<Boolean>(false)\r\n  console.log(handleSub)\r\n\r\n  return (\r\n    <>\r\n      {profileState === 'YOUR' && (\r\n        <>\r\n          <button onClick={handleSignOut} className=\"button\">\r\n            Выйти\r\n          </button>\r\n          {!inputVisible && (\r\n            <button onClick={() => changeVisible(true)} className=\"button\">\r\n              Добавить пост\r\n            </button>\r\n          )}\r\n          {inputVisible && (\r\n            <Input\r\n              type=\"post\"\r\n              cancel={() => changeVisible(false)}\r\n              send={handleAddPost}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {profileState === 'SUB' && (\r\n        <button onClick={handleUnsub} className=\"button\">\r\n          Отписаться\r\n        </button>\r\n      )}\r\n      {profileState === 'NONE' && (\r\n        <button onClick={handleSub} className=\"button\">\r\n          Подписаться\r\n        </button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { IProfileLinksProps } from '../interfaces/IProfileLinksProps'\r\n\r\nexport const ProfileLinks: React.FC<IProfileLinksProps> = ({ subs, curId }) => {\r\n  return (\r\n    <>\r\n      {!subs && (\r\n        <Link className=\"link\" to=\"/feed\">\r\n          В ленту\r\n        </Link>\r\n      )}\r\n      {subs && (\r\n        <Link className=\"link\" to={`/${curId}/${subs}`}>\r\n          Назад\r\n        </Link>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { IProfileSubsProps } from '../interfaces/IProfileSubsProps'\r\n\r\nexport const ProfileSubs: React.FC<IProfileSubsProps> = ({ id, users }) => {\r\n  const subsYouLen = users.byId[id].subsYou.length\r\n  const subsMeLen = users.byId[id].subsMe.length\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/${id}/subsYou`} className=\"link\">\r\n        Подписки - {subsYouLen} пользователей\r\n      </Link>\r\n      <Link to={`/${id}/subsMe`} className=\"link\">\r\n        Подписчики - {subsMeLen} пользователей\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Posts } from '../components/Posts'\r\nimport { IState } from '../interfaces/IState'\r\nimport '../styles/Profile.scss'\r\nimport ExtractName from '../functions/ExtractName'\r\nimport { IRouteParams } from '../interfaces/IRouteParams'\r\nimport GetProfileState from '../functions/GetProfileState'\r\nimport {\r\n  addPost,\r\n  changeName,\r\n  delPost,\r\n  likePost,\r\n  signOut,\r\n  subscribe,\r\n  unsubscribe,\r\n} from '../redux/rootReducer'\r\nimport FilterUsersPosts from '../functions/FilterUsersPosts'\r\nimport GeneratePosts from '../functions/GeneratePosts'\r\nimport { ProfileName } from '../components/ProfileName'\r\nimport { ProfileButtons } from '../components/ProfileButtons'\r\nimport { ProfileLinks } from '../components/ProfileLinks'\r\nimport { ProfileSubs } from '../components/ProfileSubs'\r\n\r\nexport const Profile: React.FC = () => {\r\n  const { id, subs, curId } = useParams<IRouteParams>()\r\n\r\n  const users = useSelector((state: IState) => state.users)\r\n  const posts = useSelector((state: IState) => state.posts)\r\n  const dispatch = useDispatch()\r\n\r\n  const profileState = GetProfileState(id, users)\r\n  const userPostsIds = FilterUsersPosts([id], posts)\r\n  const userPosts = GeneratePosts(userPostsIds, posts, users)\r\n  const userName = ExtractName(id, users)\r\n\r\n  const handleLikePost = (id: string) => {\r\n    dispatch(likePost(id))\r\n  }\r\n  const handleAddPost = (text: string) => {\r\n    dispatch(addPost(text))\r\n  }\r\n  const handleDelPost = (id: string) => {\r\n    dispatch(delPost(id))\r\n  }\r\n  const handleChangeName = (text: string) => {\r\n    dispatch(changeName(text))\r\n  }\r\n  const handleSub = () => {\r\n    dispatch(subscribe(id))\r\n  }\r\n  const handleUnsub = () => {\r\n    dispatch(unsubscribe(id))\r\n  }\r\n  const handleSignOut = () => {\r\n    dispatch(signOut())\r\n  }\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      <ProfileLinks subs={subs} curId={curId} />\r\n      <ProfileName\r\n        userName={userName}\r\n        profileState={profileState}\r\n        changeName={handleChangeName}\r\n      />\r\n      <ProfileSubs id={id} users={users} />\r\n      <ProfileButtons\r\n        profileState={profileState}\r\n        handleAddPost={handleAddPost}\r\n        handleSub={handleSub}\r\n        handleUnsub={handleUnsub}\r\n        handleSignOut={handleSignOut}\r\n      />\r\n      <Posts\r\n        posts={userPosts}\r\n        currentUser={users.currentUser}\r\n        likePost={handleLikePost}\r\n        delPost={handleDelPost}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","export default function GetProfileState(userId: string, users: any) {\r\n  if (userId === users.currentUser) {\r\n    return 'YOUR'\r\n  } else if (users.byId[users.currentUser].subsYou.includes(userId)) {\r\n    return 'SUB'\r\n  } else return 'NONE'\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport GetSubsList from '../functions/GetSubsList'\r\nimport { IRouteParams } from '../interfaces/IRouteParams'\r\nimport { IState } from '../interfaces/IState'\r\nimport '../styles/Subs.scss'\r\n\r\nexport const Subs: React.FC = () => {\r\n  const { id, subs } = useParams<IRouteParams>()\r\n  const users = useSelector((state: IState) => state.users)\r\n  const subsList = GetSubsList(id, subs, users)\r\n  return (\r\n    <div className=\"Subs\">\r\n      <Link className=\"link\" to={`/${id}`}>\r\n        Назад\r\n      </Link>\r\n      <ul className=\"Subs__list\">\r\n        {subsList.map((sub: any) => (\r\n          <li key={sub.userId} className=\"Subs__list_item\">\r\n            <Link className=\"link\" to={`/${id}/${subs}/${sub.userId}`}>\r\n              {sub.name}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import ExtractName from './ExtractName'\r\n\r\nexport default function GetSubsList(\r\n  userId: string,\r\n  subsType: string,\r\n  users: any\r\n) {\r\n  const subs = users.byId[userId][subsType]\r\n  const subsList = subs.map((id: string) => ({\r\n    userId: id,\r\n    name: ExtractName(id, users),\r\n  }))\r\n  return subsList\r\n}\r\n","import React from 'react'\nimport './styles/App.scss'\nimport { SignIn } from './containters/SignIn'\nimport { Feed } from './containters/Feed'\nimport { Profile } from './containters/Profile'\nimport { Subs } from './containters/Subs'\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { IState } from './interfaces/IState'\n\nconst App: React.FC = () => {\n  const loginUser = useSelector((state: IState) => state.login)\n  return (\n    <main className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\" component={SignIn}>\n            {loginUser && <Redirect to=\"/feed\" />}\n          </Route>\n          {!loginUser && <Redirect to=\"/login\" />}\n          <Route exact path=\"/feed\" component={Feed} />\n          <Route exact path=\"/:id\" component={Profile} />\n          <Route exact path=\"/:id/:subs\" component={Subs} />\n          <Route exact path=\"/:curId/:subs/:id\" component={Profile} />\n          <Route path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </main>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { loadFromLocalStorage } from '../localStorage/Load'\r\nimport { saveToLocalStorage } from '../localStorage/Save'\r\nimport { initialState } from './initialState'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst loadState = loadFromLocalStorage()\r\nconst state = loadState ? loadState : initialState\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: state,\r\n})\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState())\r\n})\r\n","export const loadFromLocalStorage: any = () => {\r\n  try {\r\n    const serializedState: any = localStorage.getItem('titter')\r\n    return JSON.parse(serializedState)\r\n  } catch (e) {\r\n    throw new Error(e)\r\n  }\r\n}\r\n","export const saveToLocalStorage: any = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('titter', serializedState)\r\n  } catch (e) {\r\n    throw new Error(e)\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/index.scss'\nimport { store } from './redux/index'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}